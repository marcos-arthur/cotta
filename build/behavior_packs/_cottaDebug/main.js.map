{"version":3,"sources":["main.ts"],"names":[],"mappings":"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","file":"../cotta/scripts/main.js","sourcesContent":["import { world, system, BlockPermutation, EntityInventoryComponent, ItemStack, DisplaySlotId } from \"@minecraft/server\";\r\nimport Utilities from \"./utilities.js\"; // Already included via tsconfig.json\r\n\r\nconst START_TICK = 100;\r\nconst ARENA_X_SIZE = 30;\r\nconst ARENA_Z_SIZE = 30;\r\nconst ARENA_X_OFFSET = 0;\r\nconst ARENA_Y_OFFSET = -60;\r\nconst ARENA_Z_OFFSET = 0;\r\n\r\n// global variables\r\nlet curTick = 0;\r\nlet score = 0;\r\nlet cottaX = 0;\r\nlet cottaZ = 0;\r\nlet spawnCountdown = 1;\r\n\r\nfunction initializeBreakTheTerracotta() {\r\n  const overworld = world.getDimension(\"overworld\");\r\n\r\n  let scoreObjective = world.scoreboard.getObjective(\"score\");\r\n\r\n  if (!scoreObjective) {\r\n    scoreObjective = world.scoreboard.addObjective(\"score\", \"Level\");\r\n  }\r\n\r\n  // eliminate pesky nearby mobs\r\n  let entities = overworld.getEntities({\r\n    excludeTypes: [\"player\"],\r\n  });\r\n\r\n  for (let entity of entities) {\r\n    entity.kill();\r\n  }\r\n\r\n  // set up scoreboard\r\n  world.scoreboard.setObjectiveAtDisplaySlot(DisplaySlotId.Sidebar, {\r\n    objective: scoreObjective,\r\n  });\r\n\r\n  let players = world.getAllPlayers();\r\n\r\n  for (let player of players) {\r\n    player.runCommand(\"scoreboard players set @s score 0\");\r\n\r\n    let inv = player.getComponent(\"inventory\") as EntityInventoryComponent;\r\n    inv.container.addItem(new ItemStack(\"diamond_sword\"));\r\n    inv.container.addItem(new ItemStack(\"dirt\", 64));\r\n\r\n    player.teleport(\r\n      {\r\n        x: ARENA_X_OFFSET - 3,\r\n        y: ARENA_Y_OFFSET,\r\n        z: ARENA_Z_OFFSET - 3,\r\n      },\r\n      {\r\n        dimension: overworld,\r\n        rotation: { x: 0, y: 0 },\r\n      }\r\n    );\r\n  }\r\n\r\n  world.sendMessage(\"BREAK THE TERRACOTTA\");\r\n\r\n  let airBlockPerm = BlockPermutation.resolve(\"minecraft:air\");\r\n  let cobblestoneBlockPerm = BlockPermutation.resolve(\"minecraft:cobblestone\");\r\n\r\n  if (airBlockPerm) {\r\n    Utilities.fillBlock(\r\n      airBlockPerm,\r\n      ARENA_X_OFFSET - ARENA_X_SIZE / 2 + 1,\r\n      ARENA_Y_OFFSET,\r\n      ARENA_Z_OFFSET - ARENA_Z_SIZE / 2 + 1,\r\n      ARENA_X_OFFSET + ARENA_X_SIZE / 2 - 1,\r\n      ARENA_Y_OFFSET + 10,\r\n      ARENA_Z_OFFSET + ARENA_Z_SIZE / 2 - 1\r\n    );\r\n  }\r\n\r\n  if (cobblestoneBlockPerm) {\r\n    Utilities.fourWalls(\r\n      cobblestoneBlockPerm,\r\n      ARENA_X_OFFSET - ARENA_X_SIZE / 2,\r\n      ARENA_Y_OFFSET,\r\n      ARENA_Z_OFFSET - ARENA_Z_SIZE / 2,\r\n      ARENA_X_OFFSET + ARENA_X_SIZE / 2,\r\n      ARENA_Y_OFFSET + 10,\r\n      ARENA_Z_OFFSET + ARENA_Z_SIZE / 2\r\n    );\r\n  }\r\n}\r\n\r\nfunction gameTick() {\r\n  try {\r\n    curTick++;\r\n\r\n    if (curTick > START_TICK && curTick % 20 === 0) {\r\n      // no terracotta exists, and we're waiting to spawn a new one.\r\n      if (spawnCountdown > 0) {\r\n        spawnCountdown--;\r\n\r\n        if (spawnCountdown <= 0) {\r\n          spawnNewTerracotta();\r\n        }\r\n      } else {\r\n        checkForTerracotta();\r\n      }\r\n    }\r\n\r\n    if (curTick === START_TICK) {\r\n      initializeBreakTheTerracotta();\r\n    }\r\n\r\n    const spawnInterval = Math.ceil(200 / ((score + 1) / 3));\r\n    if (curTick > START_TICK && curTick % spawnInterval === 0) {\r\n      spawnMobs();\r\n    }\r\n  } catch (e) {\r\n    console.warn(\"Tick error: \" + e);\r\n  }\r\n\r\n  system.run(gameTick);\r\n}\r\n\r\nfunction spawnNewTerracotta() {\r\n  const overworld = world.getDimension(\"overworld\");\r\n\r\n  // create new terracotta\r\n  cottaX = Math.floor(Math.random() * (ARENA_X_SIZE - 1)) - (ARENA_X_SIZE / 2 - 1);\r\n  cottaZ = Math.floor(Math.random() * (ARENA_Z_SIZE - 1)) - (ARENA_Z_SIZE / 2 - 1);\r\n\r\n  world.sendMessage(\"Creating new terracotta!\");\r\n  let block = overworld.getBlock({ x: cottaX + ARENA_X_OFFSET, y: 1 + ARENA_Y_OFFSET, z: cottaZ + ARENA_Z_OFFSET });\r\n\r\n  if (block) {\r\n    block.setPermutation(BlockPermutation.resolve(\"minecraft:yellow_glazed_terracotta\"));\r\n  }\r\n}\r\n\r\nfunction checkForTerracotta() {\r\n  const overworld = world.getDimension(\"overworld\");\r\n\r\n  let block = overworld.getBlock({ x: cottaX + ARENA_X_OFFSET, y: 1 + ARENA_Y_OFFSET, z: cottaZ + ARENA_Z_OFFSET });\r\n\r\n  if (block && !block.permutation.matches(\"minecraft:yellow_glazed_terracotta\")) {\r\n    // we didn't find the terracotta! set a new spawn countdown\r\n    score++;\r\n    spawnCountdown = 2;\r\n    cottaX = -1;\r\n\r\n    let players = world.getAllPlayers();\r\n\r\n    for (let player of players) {\r\n      player.runCommand(\"scoreboard players set @s score \" + score);\r\n    }\r\n\r\n    world.sendMessage(\"You broke the terracotta! Creating new terracotta in a few seconds.\");\r\n    cottaZ = -1;\r\n  }\r\n}\r\n\r\nfunction spawnMobs() {\r\n  const overworld = world.getDimension(\"overworld\");\r\n\r\n  // spawn mobs = create 1-2 mobs\r\n  let spawnMobCount = Math.floor(Math.random() * 2) + 1;\r\n\r\n  for (let j = 0; j < spawnMobCount; j++) {\r\n    let zombieX = Math.floor(Math.random() * (ARENA_X_SIZE - 2)) - ARENA_X_SIZE / 2;\r\n    let zombieZ = Math.floor(Math.random() * (ARENA_Z_SIZE - 2)) - ARENA_Z_SIZE / 2;\r\n\r\n    overworld.spawnEntity(\"minecraft:zombie\", {\r\n      x: zombieX + ARENA_X_OFFSET,\r\n      y: 1 + ARENA_Y_OFFSET,\r\n      z: zombieZ + ARENA_Z_OFFSET,\r\n    });\r\n  }\r\n}\r\n\r\nsystem.run(gameTick);\r\n"],"sourceRoot":"../../../scripts/"}